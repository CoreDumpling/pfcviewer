/*
 * Copyright (c) 2002 Ernest Yu. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to 
 * deal in the Software without restriction, including without limitation the 
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or 
 * sell copies of the Software, and to permit persons to whom the Software is 
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in 
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

package pfc.view;

/**
 *  Dialog box to display user-selectable options.
 *  @author Ernie Yu
 */
public class OptionsDialog extends javax.swing.JDialog {
    
    /** Creates new form OptionsDialog */
    public OptionsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setSize(360, 180);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanelOptions = new javax.swing.JPanel();
        jCheckBoxHeaders = new javax.swing.JCheckBox();
        jCheckBoxBrowser = new javax.swing.JCheckBox();
        jPanelButtons = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setTitle("Options");
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanelOptions.setLayout(new javax.swing.BoxLayout(jPanelOptions, javax.swing.BoxLayout.Y_AXIS));

        jPanelOptions.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 5, 5, 5)));
        jCheckBoxHeaders.setText("Append mail headers in Text view");
        jCheckBoxHeaders.setToolTipText("When checked, mail headers will be displayed at the end of the mail message.");
        jPanelOptions.add(jCheckBoxHeaders);

        jCheckBoxBrowser.setText("Use Browser view for HTML mail");
        jCheckBoxBrowser.setToolTipText("When checked, the display will use a Browser view for HTML mail.");
        jPanelOptions.add(jCheckBoxBrowser);

        getContentPane().add(jPanelOptions, java.awt.BorderLayout.CENTER);

        jButtonOk.setMnemonic('O');
        jButtonOk.setText("OK");
        jButtonOk.setPreferredSize(new java.awt.Dimension(75, 25));
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jPanelButtons.add(jButtonOk);

        jButtonCancel.setMnemonic('C');
        jButtonCancel.setText("Cancel");
        jButtonCancel.setPreferredSize(new java.awt.Dimension(75, 25));
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jPanelButtons.add(jButtonCancel);

        getContentPane().add(jPanelButtons, java.awt.BorderLayout.SOUTH);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        // Add your handling code here:
        ok = true;
        setVisible(false);
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // Add your handling code here:
        closeDialog(null);
    }//GEN-LAST:event_jButtonCancelActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    // Accessor methods for check box values.
    public void setAppendHeaders(boolean appendHeaders) {
        jCheckBoxHeaders.setSelected(appendHeaders);
    }
    
    public boolean isAppendHeaders() {
        return jCheckBoxHeaders.isSelected();
    }
    
    public void setBrowserView(boolean browserView) {
        jCheckBoxBrowser.setSelected(browserView);
    }
    
    public boolean isBrowserView() {
        return jCheckBoxBrowser.isSelected();
    }
    
    /** Method to display dialog box, and return true if user pressed Ok.
     */
    public boolean display() {
        ok = false;
        setVisible(true);
        return ok;
    }
    
    // Custom variables.
    private boolean ok;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JCheckBox jCheckBoxBrowser;
    private javax.swing.JCheckBox jCheckBoxHeaders;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelOptions;
    // End of variables declaration//GEN-END:variables
    
}
